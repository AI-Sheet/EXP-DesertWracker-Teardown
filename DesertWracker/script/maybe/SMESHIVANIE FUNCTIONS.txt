   local min = GetShapeBounds(shape)
    for x = 1, 3 do
        for y = 1, 3 do
            for z = 1, 3 do
                local r, g, b = weightedAverageColor(localColors)

                local pos = Vec(
                    min[1] + x - 0.5,
                    min[2] + y - 0.5,
                    min[3] + z - 0.5
                )

                PaintRGBA(pos, 1.1, r, g, b, 1.0, 1.0)
            end
        end
    end
end

--------------------------------------------------------------------------------
-- MODIFIED SPAWNING LOGIC (with color integration)
--------------------------------------------------------------------------------
function spawnOneCubeFromQueue()
    if #cubeSpawnQueue > 0 then
        table.remove(cubeSpawnQueue, 1)
        spawnIndex = spawnIndex + 1

        -- Base position
        local spawnPos = Vec(FIXED_SPAWN_POS[1], FIXED_SPAWN_POS[2], FIXED_SPAWN_POS[3])

        -- Random angle
        local angleDeg = math.random(0, 359)

        -- "Hidden" position, 20 units lower for painting invisibly
        local hiddenPos = Vec(spawnPos[1], spawnPos[2] - 20, spawnPos[3])
        local spawnTransform = Transform(hiddenPos, QuatEuler(0, angleDeg, 0))

        -- Spawn the cube
        local entities = Spawn(cubePrototype, spawnTransform)
        if #entities < 2 then
            DebugPrint("spawnOneCubeFromQueue() -> Failed to spawn voxbox.")
            return
        end

        local shape = entities[2]
        SetBrush("noise", 1, 0)
        -- Create edge details
        for z = 0, 0 do
            for x = 0, 2 do
                for y = 0, 2 do
                    if (x == 0 or x == 2 or y == 0 or y == 2) and math.random() < 0.4 then
                        DrawShapeBox(shape, x, y, z, x, y, z)
                    end
                end
            end
        end

        -- Determine tags for the cube
        local tags = {}
        if math.random() < 0.5 then table.insert(tags, "blue") end
        if math.random() < 0.5 then table.insert(tags, "yellow") end

        -- Paint while hidden
        paintCube(shape, tags)

        -- Move the cube to its intended position
        local body = GetShapeBody(shape)
        if body ~= 0 then
            local bodyTr = GetBodyTransform(body)
            local finalWorldTr = Transform(spawnPos, QuatEuler(0, angleDeg, 0))
            local finalLocalTr = TransformToLocalTransform(bodyTr, finalWorldTr)
            SetShapeLocalTransform(shape, finalLocalTr)

            -- Apply a small impulse
            local sidewaysImpulse = Vec(1, 0, 0)
            SetBodyVelocity(body, sidewaysImpulse)

            local mass = GetBodyMass(body) or 0
            DebugPrint(string.format(
                "spawnOneCubeFromQueue() -> Spawned cube #%d at Y=%.2f, mass=%.2f, angle=%d with tags: %s",
                spawnIndex, spawnPos[2], mass, angleDeg, table.concat(tags, ", ")
            ))
        end
    end
end